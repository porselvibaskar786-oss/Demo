name: Patching Control & Teams Notification

on:
  schedule:
    - cron: "*/5 * * * *"  # Every 5 minutes
  workflow_dispatch:

jobs:
  patching-check:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: pip install pandas openpyxl requests

      - name: Save EC2 key
        run: |
          echo "${{ secrets.EC2_KEY }}" > key.pem
          chmod 600 key.pem

      - name: Run patching logic
        env:
          TEAMS_WEBHOOK_URL: ${{ secrets.TEAMS_WEBHOOK_URL }}
          EC2_HOST: ${{ secrets.EC2_HOST }}
          EC2_USER: ${{ secrets.EC2_USER }}
        run: |
          python3 <<EOF
          import pandas as pd
          from datetime import datetime
          import requests
          import json
          import subprocess

          df = pd.read_excel("schedule.xlsx")
          now = datetime.now().strftime('%Y-%m-%d %H:%M')

          for _, row in df.iterrows():
              app_name = row['App Name']
              start = pd.to_datetime(row['Start Date']).strftime('%Y-%m-%d %H:%M')
              stop = pd.to_datetime(row['Stop Date']).strftime('%Y-%m-%d %H:%M')

              if now == start:
                  action = "stop"
                  status = f"ðŸ›‘ Patching started for {app_name}. Docker container stopped."
              elif now == stop:
                  action = "start"
                  status = f"âœ… Patching completed for {app_name}. Docker container started."
              else:
                  continue

              # Run SSH command to control Docker
              ssh_cmd = [
                  "ssh", "-o", "StrictHostKeyChecking=no",
                  "-i", "key.pem",
                  f"${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }}",
                  f"docker {action} healthcheck-app"
              ]
              subprocess.run(ssh_cmd)

              # Send Teams notification
              teams_payload = {
                  "@type": "MessageCard",
                  "@context": "http://schema.org/extensions",
                  "summary": f"{app_name} Patching Status",
                  "themeColor": "FF0000" if action == "stop" else "00FF00",
                  "title": f"{app_name} Patching Notification",
                  "sections": [{
                      "facts": [
                          {"name": "App", "value": app_name},
                          {"name": "Time", "value": now},
                          {"name": "Status", "value": status}
                      ],
                      "text": "Automated patching update from GitHub Actions."
                  }]
              }

              requests.post(
                  url="${{ secrets.TEAMS_WEBHOOK_URL }}",
                  headers={"Content-Type": "application/json"},
                  data=json.dumps(teams_payload)
              )
          EOF
